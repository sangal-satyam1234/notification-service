akka{
    #log-config-on-start = on
    loglevel="DEBUG"
      actor {
        provider = "cluster"
        deployment {
          /rootManager/notificationRouter {
            router = round-robin-group
            routees.paths = ["/user/rootManager/notificationManager"]
            cluster {
              enabled = on
              allow-local-routees = on
            }
          }
        }
        serializers {
            kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
        }
        serialization-bindings {
              "akka.KryoSerializable" = kryo
            }
      }
      remote {
          log-remote-lifecycle-events = on
          artery{
            canonical.hostname = ${clustering.ip}
            canonical.port = ${clustering.port}
           # bind.hostname = "127.0.0.1" # internal (bind) hostname
            #bind.port = ${clustering.port} # internal (bind) port
          }
        }
     cluster {
        seed-nodes = [
          "akka://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
        ]
        auto-down-unreachable-after = 10s
      }
}

http {
  ip = "0.0.0.0"
  ip = ${?SERVER_IP}
  port = 8000
  port = ${?SERVER_PORT}
}

clustering {
 ip = "0.0.0.0"
 ip = ${?CLUSTER_IP}
 port = 1600
 port = ${?CLUSTER_PORT}
 seed-ip = "0.0.0.0"
 seed-ip = ${?CLUSTER_IP}
 seed-ip = ${?SEED_PORT_1600_TCP_ADDR}
 seed-port = 1600
 seed-port = ${?SEED_PORT_1600_TCP_PORT}
 cluster.name = notification-cluster
}